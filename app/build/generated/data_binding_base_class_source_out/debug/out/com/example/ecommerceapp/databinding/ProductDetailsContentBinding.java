// Generated by view binder compiler. Do not edit!
package com.example.ecommerceapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ecommerceapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductDetailsContentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView emptyReviewText;

  @NonNull
  public final TextView productDescription;

  @NonNull
  public final TextView productDetailsHeadLine;

  @NonNull
  public final TextView productReviewHeadLine;

  @NonNull
  public final ItemNewStateBinding productState;

  @NonNull
  public final TextView productTitleHeadLine;

  @NonNull
  public final TextView productWriteReview;

  @NonNull
  public final RecyclerView reviewsRecycler;

  private ProductDetailsContentBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView emptyReviewText, @NonNull TextView productDescription,
      @NonNull TextView productDetailsHeadLine, @NonNull TextView productReviewHeadLine,
      @NonNull ItemNewStateBinding productState, @NonNull TextView productTitleHeadLine,
      @NonNull TextView productWriteReview, @NonNull RecyclerView reviewsRecycler) {
    this.rootView = rootView;
    this.emptyReviewText = emptyReviewText;
    this.productDescription = productDescription;
    this.productDetailsHeadLine = productDetailsHeadLine;
    this.productReviewHeadLine = productReviewHeadLine;
    this.productState = productState;
    this.productTitleHeadLine = productTitleHeadLine;
    this.productWriteReview = productWriteReview;
    this.reviewsRecycler = reviewsRecycler;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductDetailsContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductDetailsContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_details_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductDetailsContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyReviewText;
      TextView emptyReviewText = ViewBindings.findChildViewById(rootView, id);
      if (emptyReviewText == null) {
        break missingId;
      }

      id = R.id.productDescription;
      TextView productDescription = ViewBindings.findChildViewById(rootView, id);
      if (productDescription == null) {
        break missingId;
      }

      id = R.id.productDetailsHeadLine;
      TextView productDetailsHeadLine = ViewBindings.findChildViewById(rootView, id);
      if (productDetailsHeadLine == null) {
        break missingId;
      }

      id = R.id.productReviewHeadLine;
      TextView productReviewHeadLine = ViewBindings.findChildViewById(rootView, id);
      if (productReviewHeadLine == null) {
        break missingId;
      }

      id = R.id.productState;
      View productState = ViewBindings.findChildViewById(rootView, id);
      if (productState == null) {
        break missingId;
      }
      ItemNewStateBinding binding_productState = ItemNewStateBinding.bind(productState);

      id = R.id.productTitleHeadLine;
      TextView productTitleHeadLine = ViewBindings.findChildViewById(rootView, id);
      if (productTitleHeadLine == null) {
        break missingId;
      }

      id = R.id.productWriteReview;
      TextView productWriteReview = ViewBindings.findChildViewById(rootView, id);
      if (productWriteReview == null) {
        break missingId;
      }

      id = R.id.reviewsRecycler;
      RecyclerView reviewsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (reviewsRecycler == null) {
        break missingId;
      }

      return new ProductDetailsContentBinding((ConstraintLayout) rootView, emptyReviewText,
          productDescription, productDetailsHeadLine, productReviewHeadLine, binding_productState,
          productTitleHeadLine, productWriteReview, reviewsRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
