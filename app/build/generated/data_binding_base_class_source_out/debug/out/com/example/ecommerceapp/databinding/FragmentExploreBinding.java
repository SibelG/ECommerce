// Generated by view binder compiler. Do not edit!
package com.example.ecommerceapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ecommerceapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExploreBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView bestSellingHeadLineText;

  @NonNull
  public final RecyclerView bestSellingRecyclerView;

  @NonNull
  public final TextView brandsHeadLine;

  @NonNull
  public final RecyclerView brandsRecycler;

  @NonNull
  public final TextView categoriesHeadLineText;

  @NonNull
  public final RecyclerView categoriesRecycler;

  @NonNull
  public final Guideline endGuideLine;

  @NonNull
  public final TextView recommendHeadLineText;

  @NonNull
  public final RecyclerView recommendRecyclerView;

  @NonNull
  public final TextView seeMoreHeadLineText;

  @NonNull
  public final TextView seeMoreRecommendText;

  @NonNull
  public final Guideline startGuideLine;

  private FragmentExploreBinding(@NonNull ScrollView rootView,
      @NonNull TextView bestSellingHeadLineText, @NonNull RecyclerView bestSellingRecyclerView,
      @NonNull TextView brandsHeadLine, @NonNull RecyclerView brandsRecycler,
      @NonNull TextView categoriesHeadLineText, @NonNull RecyclerView categoriesRecycler,
      @NonNull Guideline endGuideLine, @NonNull TextView recommendHeadLineText,
      @NonNull RecyclerView recommendRecyclerView, @NonNull TextView seeMoreHeadLineText,
      @NonNull TextView seeMoreRecommendText, @NonNull Guideline startGuideLine) {
    this.rootView = rootView;
    this.bestSellingHeadLineText = bestSellingHeadLineText;
    this.bestSellingRecyclerView = bestSellingRecyclerView;
    this.brandsHeadLine = brandsHeadLine;
    this.brandsRecycler = brandsRecycler;
    this.categoriesHeadLineText = categoriesHeadLineText;
    this.categoriesRecycler = categoriesRecycler;
    this.endGuideLine = endGuideLine;
    this.recommendHeadLineText = recommendHeadLineText;
    this.recommendRecyclerView = recommendRecyclerView;
    this.seeMoreHeadLineText = seeMoreHeadLineText;
    this.seeMoreRecommendText = seeMoreRecommendText;
    this.startGuideLine = startGuideLine;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExploreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_explore, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExploreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bestSellingHeadLineText;
      TextView bestSellingHeadLineText = ViewBindings.findChildViewById(rootView, id);
      if (bestSellingHeadLineText == null) {
        break missingId;
      }

      id = R.id.bestSellingRecyclerView;
      RecyclerView bestSellingRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (bestSellingRecyclerView == null) {
        break missingId;
      }

      id = R.id.brandsHeadLine;
      TextView brandsHeadLine = ViewBindings.findChildViewById(rootView, id);
      if (brandsHeadLine == null) {
        break missingId;
      }

      id = R.id.brandsRecycler;
      RecyclerView brandsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (brandsRecycler == null) {
        break missingId;
      }

      id = R.id.categoriesHeadLineText;
      TextView categoriesHeadLineText = ViewBindings.findChildViewById(rootView, id);
      if (categoriesHeadLineText == null) {
        break missingId;
      }

      id = R.id.categoriesRecycler;
      RecyclerView categoriesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (categoriesRecycler == null) {
        break missingId;
      }

      id = R.id.endGuideLine;
      Guideline endGuideLine = ViewBindings.findChildViewById(rootView, id);
      if (endGuideLine == null) {
        break missingId;
      }

      id = R.id.recommendHeadLineText;
      TextView recommendHeadLineText = ViewBindings.findChildViewById(rootView, id);
      if (recommendHeadLineText == null) {
        break missingId;
      }

      id = R.id.recommendRecyclerView;
      RecyclerView recommendRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recommendRecyclerView == null) {
        break missingId;
      }

      id = R.id.seeMoreHeadLineText;
      TextView seeMoreHeadLineText = ViewBindings.findChildViewById(rootView, id);
      if (seeMoreHeadLineText == null) {
        break missingId;
      }

      id = R.id.seeMoreRecommendText;
      TextView seeMoreRecommendText = ViewBindings.findChildViewById(rootView, id);
      if (seeMoreRecommendText == null) {
        break missingId;
      }

      id = R.id.startGuideLine;
      Guideline startGuideLine = ViewBindings.findChildViewById(rootView, id);
      if (startGuideLine == null) {
        break missingId;
      }

      return new FragmentExploreBinding((ScrollView) rootView, bestSellingHeadLineText,
          bestSellingRecyclerView, brandsHeadLine, brandsRecycler, categoriesHeadLineText,
          categoriesRecycler, endGuideLine, recommendHeadLineText, recommendRecyclerView,
          seeMoreHeadLineText, seeMoreRecommendText, startGuideLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
